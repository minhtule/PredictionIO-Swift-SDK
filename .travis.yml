language: objective-c
osx_image: xcode9.2
git:
  depth: 1
branches:
  except:
    - gh-pages

env:
  global:
    - WORKSPACE=PredictionIO.xcworkspace
    - IOS_FRAMEWORK_SCHEME="PredictionIO iOS"
    - MACOS_FRAMEWORK_SCHEME="PredictionIO macOS"
  matrix:
    # iOS
    - DESTINATION="OS=11.2,name=iPhone X"         SCHEME="$IOS_FRAMEWORK_SCHEME"    BUILD_EXAMPLE="YES"  LINTING="YES"
    - DESTINATION="OS=10.3.1,name=iPhone 7 Plus"  SCHEME="$IOS_FRAMEWORK_SCHEME"    BUILD_EXAMPLE="YES"  LINTING="NO"
    # macOS
    - DESTINATION="arch=x86_64"                   SCHEME="$MACOS_FRAMEWORK_SCHEME"  BUILD_EXAMPLE="NO"   LINTING="NO"

before_intall:
  - if [ $LINTING == "YES" ]; then
      brew install swiftlint;
    fi

before_script:
  # Set up mock API server
  - cd ..
  - git clone git://github.com/minhtule/PredictionIO-Mock-Server.git --depth 1
  - cd PredictionIO-Mock-Server
  - npm install
  - node app.js &
  - sleep 3  # Give mock server some time to bind to sockets, etc
  - cd ../PredictionIO-Swift-SDK

script:
  - set -o pipefail

  # Linting with SwiftLint and CocoaPods
  - if [ $LINTING == "YES" ]; then
      swiftlint lint --strict;
      pod lib lint;
    fi

  # Test in Release
  - xcodebuild -workspace "$WORKSPACE" -scheme "$SCHEME" -destination "$DESTINATION" -configuration Release ONLY_ACTIVE_ARCH=NO ENABLE_TESTABILITY=YES test | xcpretty

  # Build the iOS demo app in Debug
  # - xcodebuild -workspace PredictionIO.xcworkspace -scheme "iOS Example" -sdk iphonesimulator -destination "platform=iOS Simulator,name=iPhone 6" ONLY_ACTIVE_ARCH=NO build | xcpretty
